{"remainingRequest":"/Users/bizvane_xdl/vue/fastice-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bizvane_xdl/vue/fastice-site/src/components/HelloWorld.vue?vue&type=style&index=1&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/Users/bizvane_xdl/vue/fastice-site/src/components/HelloWorld.vue","mtime":1553506596980},{"path":"/Users/bizvane_xdl/vue/fastice-site/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/bizvane_xdl/vue/fastice-site/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bizvane_xdl/vue/fastice-site/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bizvane_xdl/vue/fastice-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bizvane_xdl/vue/fastice-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*{\n  box-sizing: border-box;\n  margin:0;\n  padding:0;\n}\nol,ul{\n  list-style: none;\n}\n.img{\n  height:500px;\n  width:100%;\n}\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-carousel indicator-position=\"outside\">\n    <el-carousel-item v-for=\"item in sliders\" :key=\"item\">\n      <!--<h3>{{ item }}</h3>-->\n      <img :src=\"item.img\" class=\"img\" alt=\"\">\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 18px;\n    opacity: 0.75;\n    line-height: 500px;\n    margin: 0;\n  }\n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n\n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n</style>\n<script>\n    // import {} from '../assets/slider/'\n    export default {\n        name: 'HelloWorld',\n        props: {\n            initialSpeed: {\n                type: Number,\n                default: 30\n            },\n            initialInterval: {\n                type: Number,\n                default: 4\n            }\n        },\n        data () {\n            return {\n                sliders:[\n                    {\n                        img: require(\"../../static/slider/apple-apple-devices-business.jpg\")\n                    },\n                    {\n                        img: require(\"../../static/slider/blurred-background-coffee-cup-computer.jpg\")\n                    },\n                    {\n                        img: require('../../static/slider/business-camera-coffee.jpg')\n                    },\n                    {\n                        img: require('../../static/slider/computer-computer-keyboard-connection.jpg')\n                    }\n                ],\n                currentIndex:1,\n                distance:-600*2,\n                transitionEnd: true,\n                speed: this.initialSpeed\n            }\n        },\n        computed:{\n            containerStyle() {\n                return {\n                    transform:`translate3d(${this.distance}px, 0, 0)`\n                }\n            },\n            interval() {\n                return this.initialInterval * 1000\n            }\n        },\n        mounted() {\n            this.init()\n        },\n        methods:{\n            init() {\n                this.play()\n                window.onblur = function() { this.stop() }.bind(this)\n                window.onfocus = function() { this.play() }.bind(this)\n            },\n            move(offset, direction, speed) {\n                if (!this.transitionEnd) return\n                this.transitionEnd = false\n                direction === -1 ? this.currentIndex += offset/600 : this.currentIndex -= offset/600\n                if (this.currentIndex > 5) this.currentIndex = 1\n                if (this.currentIndex < 1) this.currentIndex = 5\n\n                const destination = this.distance + offset * direction\n                this.animate(destination, direction, speed)\n            },\n            animate(des, direc, speed) {\n                if (this.temp) {\n                    window.clearInterval(this.temp)\n                    this.temp = null\n                }\n                this.temp = window.setInterval(() => {\n                    if ((direc === -1 && des < this.distance) || (direc === 1 && des > this.distance)) {\n                        this.distance += speed * direc\n                    } else {\n                        this.transitionEnd = true\n                        window.clearInterval(this.temp)\n                        this.distance = des\n                        if (des < -3000) this.distance = -600\n                        if (des > -600) this.distance = -3000\n                    }\n                }, 20)\n            },\n            jump(index) {\n                const direction = index - this.currentIndex >= 0 ? -1 : 1\n                const offset = Math.abs(index - this.currentIndex) * 600\n                const jumpSpeed = Math.abs(index - this.currentIndex) === 0 ? this.speed : Math.abs(index - this.currentIndex) * this.speed\n                this.move(offset, direction, jumpSpeed)\n            },\n            play() {\n                if (this.timer) {\n                    window.clearInterval(this.timer)\n                    this.timer = null\n                }\n                this.timer = window.setInterval(() => {\n                    this.move(600, -1, this.speed)\n                }, this.interval)\n            },\n            stop() {\n                window.clearInterval(this.timer)\n                this.timer = null\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  *{\n    box-sizing: border-box;\n    margin:0;\n    padding:0;\n  }\n  ol,ul{\n    list-style: none;\n  }\n  .img{\n    height:500px;\n    width:100%;\n  }\n</style>"]}]}